public class 키패드누르기 {

    //내 방식, 속도: 1~4ms, ~70MB
    class Hand{
        String name;
        int r, c;
        public Hand(String name, int r, int c){
            this.name = name;
            this.r = r;
            this.c = c;
        }
    }
    public String solution(int[] numbers, String hand) {
        //왼손: 1,4,7 입력
        //오른손: 3,6,9 입력
        //가운데 2,5,8,0은 더 가까운 위치의 손가락을 사용.
        //만약 거리가 같다면, 왼손잡이 오른손잡이에 따라서 판단.

        int[][] keypad = {{1,2,3}, {4,5,6}, {7,8,9},{-1,0,-1}}; //numbers 배열 원소의 값은 0=> && <=9
        String answer = "";
        Hand left = new Hand("L", 3, 0); //왼손은 *에 위치
        Hand right = new Hand("R", 3, 2);//오른손은 #에 위치

        if(hand.equals("left")) hand = "L";
        else{ hand = "R";}

        for(int i = 0; i < numbers.length; i++){
            int[] position = findingPosition(keypad, numbers, i); //숫자의 위치 찾기
            int row = position[0]; int column = position[1];

            if(numbers[i] == 1 || numbers[i] == 4 || numbers[i] == 7) {  
                answer+="L";
                left.r = row; left.c = column;
            }
            else if(numbers[i] == 3 || numbers[i] == 6 || numbers[i] == 9) {
                answer+="R";
                right.r = row; right.c = column;
            }
            else{
                int leftCount = Math.abs(left.r-row) + Math.abs(left.c-column);  //왼손 오른손이 각각 걸리는 거리 구하고 비교하기
                int rightCount = Math.abs(right.r-row) + Math.abs(right.c-column);
                if(leftCount < rightCount) {answer+="L"; left.r = row; left.c = column;}
                else if(leftCount > rightCount) {answer+="R"; right.r = row; right.c = column;}
                else {answer+=hand;
                    if(hand.equals("L")){ left.r = row; left.c = column;}
                    else{ right.r = row; right.c = column;}
                }
            }
        }
        System.out.println(answer);
        return answer;
    }

    public int[] findingPosition(int[][] keypad, int[] numbers, int i){
        int[] rowColumn = new int[2];
        for(int r = 0; r < keypad.length; r++){
            for(int c = 0; c < keypad[r].length; c++){
                if(keypad[r][c] == numbers[i]) {
                    rowColumn[0] = r; rowColumn[1] = c;
                    break;}}}

        return rowColumn;
    }

    public static void main(String[] args) {
        키패드누르기 test1 = new 키패드누르기();
        test1.solution(new int[]{1,3, 4, 5, 8, 2, 1, 4, 5, 9, 5}, "right" );  //"LRLLLRLLRRL"
    }
}
